package week01

object session {
  def abs(x: Double) = if (x < 0) -x else x //> abs: (x: Double)Double
  def sqrt(x: Double) = {
    def sqrtIter(guess: Double, x: Double): Double =
      if (isGoodEnough(guess, x)) guess
      else sqrtIter(improve(guess, x), x) //> sqrtIter: (guess: Double, x: Double)Double

    def isGoodEnough(guess: Double, x: Double) =
      abs(guess * guess - x) / x < 0.0001 //> isGoodEnough: (guess: Double, x: Double)Boolean

    def improve(guess: Double, x: Double) =
      (guess + x / guess) / 2 //> improve: (guess: Double, x: Double)Double

    sqrtIter(1.0, x) //> sqrt: (x: Double)Double
  }

  sqrt(2) //> res0: Double = 1.4142156862745097
  sqrt(4) //> res1: Double = 2.0000000929222947
  sqrt(1e-6) //> res2: Double = 0.0010000001533016628
  sqrt(1e60) //> res3: Double = 1.0000000031080746E30
  sqrt(289) //> res4: Double = 17.000009637317497
}